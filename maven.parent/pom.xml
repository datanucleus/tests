<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://maven.apache.org/POM/4.0.0
                      http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>org.datanucleus</groupId>
    <artifactId>datanucleus-test-maven-parent</artifactId>
    <version>6.0</version>
    <name>DataNucleus AccessPlatform Integration Tests</name>
    <description>Build and run integration tests (profiles "h2" and "rdbms" are active by default)</description>
    <packaging>pom</packaging>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <skipCoverage>true</skipCoverage>

        <javax.jdo.min.version>3.2.0-m9</javax.jdo.min.version>
        <javax.jdo.max.version>3.2.99</javax.jdo.max.version>
        <javax.persistence.min.version>2.2.1</javax.persistence.min.version>
        <javax.persistence.max.version>2.2.99</javax.persistence.max.version>

        <core.min.version>5.1.99</core.min.version>
        <core.max.version>6.0.99</core.max.version>
        <api.jdo.min.version>5.1.99</api.jdo.min.version>
        <api.jdo.max.version>6.0.99</api.jdo.max.version>
        <api.jpa.min.version>5.1.99</api.jpa.min.version>
        <api.jpa.max.version>6.0.99</api.jpa.max.version>
        <api.rest.min.version>5.0.2</api.rest.min.version>
        <api.rest.max.version>6.0.99</api.rest.max.version>

        <rdbms.min.version>5.1.99</rdbms.min.version>
        <rdbms.max.version>6.0.99</rdbms.max.version>
        <cassandra.min.version>5.1.99</cassandra.min.version>
        <cassandra.max.version>6.0.99</cassandra.max.version>
        <mongodb.min.version>5.1.99</mongodb.min.version>
        <mongodb.max.version>6.0.99</mongodb.max.version>
        <hbase.min.version>5.1.99</hbase.min.version>
        <hbase.max.version>6.0.99</hbase.max.version>
        <neo4j.min.version>5.1.99</neo4j.min.version>
        <neo4j.max.version>6.0.99</neo4j.max.version>
        <excel.min.version>5.1.99</excel.min.version>
        <excel.max.version>6.0.99</excel.max.version>
        <odf.min.version>5.1.99</odf.min.version>
        <odf.max.version>6.0.99</odf.max.version>
        <json.min.version>5.1.99</json.min.version>
        <json.max.version>6.0.99</json.max.version>
        <ldap.min.version>5.0.99</ldap.min.version>
        <ldap.max.version>6.0.99</ldap.max.version>
        <xml.min.version>5.0.99</xml.min.version>
        <xml.max.version>6.0.99</xml.max.version>

        <jodatime.min.version>5.1.99</jodatime.min.version>
        <jodatime.max.version>6.0.99</jodatime.max.version>
        <geospatial.min.version>5.1.99</geospatial.min.version>
        <geospatial.max.version>6.0.99</geospatial.max.version>
        <guava.min.version>5.0.0-release</guava.min.version>
        <guava.max.version>6.0.99</guava.max.version>
    </properties>

    <modules>
        <module>../framework/</module>
        <module>../framework.maven/</module>
        <module>../samples/</module>

        <module>../jdo/general/</module>
        <module>../jdo/identity/</module>
        <module>../jdo/jta/</module>
        <module>../jdo/typesafe/</module>
        <module>../jdo/replication/</module>
        <module>../jdo/enhancer/</module>

        <module>../jdo/rdbms/</module>
        <module>../jdo/spreadsheet/</module>
        <module>../jdo/ldap/</module>
        <module>../jdo/xml/</module>
        <module>../jdo/hbase/</module>
        <module>../jdo/mongodb/</module>
        <module>../jdo/cassandra/</module>
        <module>../jdo/neo4j/</module>
    
        <module>../jpa/general/</module>
        <module>../jpa/rdbms/</module>
        <module>../jpa/criteria/</module>
        <module>../jpa/jta/</module>
    </modules>

    <dependencies>
        <dependency>
            <groupId>org.datanucleus</groupId>
            <artifactId>datanucleus-test-framework</artifactId>
            <version>6.0</version>
        </dependency>
        <dependency>
            <groupId>org.datanucleus</groupId>
            <artifactId>datanucleus-test-samples</artifactId>
            <version>6.0</version>
        </dependency>
        <dependency>
            <groupId>org.datanucleus</groupId>
            <artifactId>datanucleus-core</artifactId>
            <version>[${core.min.version}, ${core.max.version})</version>
        </dependency>
        <dependency>
            <groupId>org.datanucleus</groupId>
            <artifactId>datanucleus-api-jdo</artifactId>
            <version>[${api.jdo.min.version}, ${api.jdo.max.version})</version>
        </dependency>
        <!-- NOTE : Can't upgrade from this since the @Datastore handling of DataNucleusTestWatcher breaks on 4.11 -->
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>4.10</version>
        </dependency>
        <dependency>
          <groupId>org.assertj</groupId>
          <artifactId>assertj-core</artifactId>
          <version>3.1.0</version>
        </dependency>

        <dependency>
            <groupId>org.datanucleus</groupId>
            <artifactId>javax.jdo</artifactId>
            <version>[${javax.jdo.min.version}, ${javax.jdo.max.version})</version>
        </dependency>
        <dependency>
            <groupId>org.datanucleus</groupId>
            <artifactId>javax.persistence</artifactId>
            <version>[${javax.persistence.min.version}, ${javax.persistence.max.version})</version>
        </dependency>

        <dependency>
            <groupId>javax.transaction</groupId> 
            <artifactId>javax.transaction-api</artifactId> 
            <version>1.3</version>
        </dependency>
        <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-api</artifactId>
            <version>2.0.1</version>
        </dependency>
        <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-core</artifactId>
            <version>2.13.2</version>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
            <version>1.5.6</version>
            <optional>true</optional>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-log4j12</artifactId>
            <version>1.5.6</version>
            <optional>true</optional>
        </dependency>
        <dependency>
            <groupId>net.sf.ehcache</groupId>
            <artifactId>ehcache-core</artifactId>
            <version>2.2.0</version>
        </dependency>
    </dependencies>

    <build>
        <!-- For the defaults of Maven 2.0.x see http://maven.apache.org/pom.html#The_Super_POM -->
        <sourceDirectory>src/java</sourceDirectory>
        <resources>
            <resource>
                <filtering>true</filtering>
                <directory>src/java</directory>
                <includes>
                    <include>**/plugin.xml</include>
                    <include>**/*.properties</include>
                    <include>**/orm.xml</include>
                    <include>**/*.jdo*</include>
                    <include>**/*.orm*</include>
                    <include>**/*.dtd</include>
                    <include>**/*.xsd</include>
                    <include>**/*.jdo</include>
                    <include>**/*.sql</include>
                    <include>**/META-INF/services/*</include>
                    <include>**/META-INF/*.xml</include>
                </includes>
            </resource>
            <resource>
                <directory>${basedir}/src/resources</directory>
                <includes>
                    <include>**/persistence*.xml</include>
                    <include>**/plugin*.xml</include>
                    <include>**/orm.xml</include>
                    <include>**/*.jdo*</include>
                    <include>**/*.orm*</include>
                    <include>**/*.xsd</include>
                    <include>**/*.jdoquery*</include>
                    <include>**/*.MF</include>
                    <include>log4j.properties</include>
                    <include>**/*.jpg</include>
                    <include>**/*.gif</include>
                </includes>
            </resource>
            <resource>
                <directory>${basedir}/src/conf</directory>
                <includes>
                    <include>**/*.properties</include>
                    <include>**/*.xml</include>
                </includes>
            </resource>
            <resource>
                <directory>${basedir}</directory>
                <includes>
                    <include>plugin.xml</include>
                </includes>
            </resource>
            <resource>
                <!-- Need to have MANIFEST-MF in place before packaging  -->
                <directory>${basedir}/META-INF</directory>
                <targetPath>META-INF</targetPath>
                <includes>
                    <include>MANIFEST.MF</include>
                </includes>
            </resource>
            <resource>
                <directory>${basedir}</directory>
                <targetPath>META-INF</targetPath>
                <includes>
                    <include>LICENSE.txt</include>
                    <include>NOTICE.txt</include>
                    <include>README.txt</include>
                </includes>
            </resource>
        </resources>

        <testSourceDirectory>src/test</testSourceDirectory>
        <testResources>
            <!-- 
                 beware that the enhancer mojo won't find any *.jdo* file when it is
                 put into testOutputDirectory, since it looks only into outputDirectory! 
            -->
            <testResource>
                <directory>${basedir}/src/test</directory>
                <includes>
                    <include>**/persistence*.xml</include>
                    <include>**/plugin*.xml</include>
                    <include>**/*.jdo*</include>
                    <include>**/*.orm*</include>
                    <include>**/*.xsd</include>
                    <include>**/*.jdoquery*</include>
                    <include>**/*.MF</include>
                    <include>log4j.properties</include>
                </includes>
            </testResource>
        </testResources>

        <plugins>
            <plugin>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.8.0</version>
                <configuration>
                    <encoding>ISO-8859-1</encoding>
                    <source>1.8</source>
                    <target>1.8</target>
                    <!--compilerArgument>-Xlint:unchecked</compilerArgument-->
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
                <version>0.7.9</version>
                <executions>
                    <execution>
                        <id>default-prepare-agent</id>
                        <goals>
                            <goal>prepare-agent</goal>
                        </goals>
                        <configuration>
                            <skip>${skipCoverage}</skip>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>2.20</version>
                <configuration>
                    <argLine>${argLine} -Xmx256m -Djava.util.logging.config.file=logging.properties</argLine>

                    <!-- continue running tests if there are failures for one project -->
                    <testFailureIgnore>true</testFailureIgnore>
                    <includes>
                        <include>**/*Test.java</include>
                    </includes>
                    <excludes combine.children="append">
                        <exclude>**/knownbugs/*.java</exclude>
                        <exclude>**/newfeatures/*.java</exclude>
                    </excludes>

                    <runOrder>alphabetical</runOrder>
                    <!-- 
                        This reduces interaction between tests e.g. through static variables.
                        At the point of this writing, the default it to run each test on it's own VM,
                        allowing each test project to override this setting.
                     -->
                    <forkCount>1</forkCount>
                    <reuseForks>false</reuseForks>
                    <properties>
                        <property>
                            <name>listener</name>
                            <value>org.datanucleus.tests.TestRunListener</value>
                        </property>
                    </properties>
                    <systemProperties>
                        <property>
                            <name>datanucleus.test1.properties</name>
                            <value>datanucleus-${maven.datanucleus.datastore}.1.properties</value>
                        </property>
                        <property>
                            <name>datanucleus.test2.properties</name>
                            <value>datanucleus-${maven.datanucleus.datastore}.2.properties</value>
                        </property>
                        <property>
                            <name>maven.datanucleus.test.skip.reset</name>
                            <value>${maven.datanucleus.test.skip.reset}</value>
                        </property>
                    </systemProperties>
                </configuration>
            </plugin>
<!--            <plugin>-->
<!--                <artifactId>maven-jar-plugin</artifactId>-->
<!--                <configuration>-->
<!--                    <archive>-->
<!--                        <manifestFile>META-INF/MANIFEST.MF</manifestFile>-->
<!--                    </archive>-->
<!--                </configuration>-->
<!--            </plugin>-->
            <plugin>
                <groupId>org.datanucleus</groupId>
                <artifactId>datanucleus-maven-plugin</artifactId>
                <version>6.0.0-m1-SNAPSHOT</version>
                <configuration>
                    <fork>false</fork>
                    <verbose>false</verbose>
                    <!-- 
                        write all enhanced classes to target/classes, since by default enhancer
                        tries to write them where it read them from, which doesn't work for jars
                        (e.g. in jdo/general, we're enhancing class files from test.samples)
                     -->
                    <targetDirectory>${project.build.outputDirectory}</targetDirectory>
                </configuration>
                <executions>
                    <execution>
                        <phase>compile</phase>
                        <goals>
                            <goal>enhance</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <artifactId>maven-clean-plugin</artifactId>
                <version>2.4.1</version>
                <configuration>
                    <filesets>
                        <fileset>
                            <directory>${basedir}/testDB</directory>
                            <includes>
                                <include>**/*</include>
                            </includes>
                        </fileset>
                        <fileset>
                            <directory>${basedir}</directory>
                            <includes>
                                <include>**/*.log</include>
                                <include>**/test.xml</include>
                                <include>**/test.xls</include>
                                <include>**/test.xlsx</include>
                                <include>**/test.ods</include>
                                <include>**/testDB*</include>
                            </includes>
                        </fileset>
                    </filesets>
                </configuration>
            </plugin>
        </plugins>
        <pluginManagement>
        	<plugins>
        		<!--This plugin's configuration is used to store Eclipse m2e settings only. It has no influence on the Maven build itself.-->
        		<plugin>
        			<groupId>org.eclipse.m2e</groupId>
        			<artifactId>lifecycle-mapping</artifactId>
        			<version>1.0.0</version>
        			<configuration>
        				<lifecycleMappingMetadata>
        					<pluginExecutions>
        						<pluginExecution>
        							<pluginExecutionFilter>
        								<groupId>org.jacoco</groupId>
        								<artifactId>
        									jacoco-maven-plugin
        								</artifactId>
        								<versionRange>
        									[0.7.9,)
        								</versionRange>
        								<goals>
        									<goal>prepare-agent</goal>
        								</goals>
        							</pluginExecutionFilter>
        							<action>
        								<ignore></ignore>
        							</action>
        						</pluginExecution>
        					</pluginExecutions>
        				</lifecycleMappingMetadata>
        			</configuration>
        		</plugin>
        	</plugins>
        </pluginManagement>
    </build>

    <profiles>
        <!-- See http://maven.apache.org/guides/introduction/introduction-to-profiles.html -->
        <profile>
            <!-- build and run scenarios specific to RDBMS datastores, active by default -->
            <id>rdbms</id>
            <activation>
              <activeByDefault>true</activeByDefault>
            </activation>
            <modules>
                <module>../jdo/general/</module>
                <module>../jdo/identity/</module>
                <module>../jdo/rdbms/</module>
                <module>../jpa/general/</module>
                <module>../jpa/rdbms/</module>
            </modules>
            <dependencies>
                <dependency>
                    <groupId>org.datanucleus</groupId>
                    <artifactId>datanucleus-rdbms</artifactId>
                    <version>[${rdbms.min.version}, ${rdbms.max.version})</version>
                </dependency>
                <dependency>
                    <groupId>com.h2database</groupId>
                    <artifactId>h2</artifactId>
                    <version>1.4.200</version>
                </dependency>
            </dependencies>
        </profile>

        <profile>
            <!-- Use datastore "hsql" -->
            <id>hsql</id>
            <dependencies>
                <dependency>
                    <groupId>org.datanucleus</groupId>
                    <artifactId>datanucleus-rdbms</artifactId>
                    <version>[${rdbms.min.version}, ${rdbms.max.version})</version>
                </dependency>
                <dependency>
                    <groupId>org.hsqldb</groupId>
                    <artifactId>hsqldb</artifactId>
                    <version>2.3.3</version>
                </dependency>
            </dependencies>
            <properties>
                <maven.datanucleus.datastore>hsql</maven.datanucleus.datastore>
                <!-- Running as embedded, no need to cleanup -->
                <maven.datanucleus.test.skip.reset>true</maven.datanucleus.test.skip.reset>
            </properties>
        </profile>

        <profile>
            <!-- Use datastore "h2" (DEFAULT) -->
            <id>h2</id>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
            <dependencies>
                <dependency>
                    <groupId>com.h2database</groupId>
                    <artifactId>h2</artifactId>
                    <version>1.4.200</version>
                </dependency>
                <dependency>
                    <groupId>org.datanucleus</groupId>
                    <artifactId>datanucleus-rdbms</artifactId>
                    <version>[${rdbms.min.version}, ${rdbms.max.version})</version>
                </dependency>
            </dependencies>
            <properties>
                <maven.datanucleus.datastore>h2</maven.datanucleus.datastore>
                <!-- Running as embedded, no need to cleanup -->
                <maven.datanucleus.test.skip.reset>true</maven.datanucleus.test.skip.reset>
            </properties>
        </profile>

        <profile>
            <!-- Use datastore "mysql" -->
            <id>mysql</id>
            <dependencies>
                <dependency>
                    <groupId>mysql</groupId>
                    <artifactId>mysql-connector-java</artifactId>
                    <version>8.0.16</version>
                </dependency>
                <dependency>
                    <groupId>org.datanucleus</groupId>
                    <artifactId>datanucleus-rdbms</artifactId>
                    <version>[${rdbms.min.version}, ${rdbms.max.version})</version>
                </dependency>
            </dependencies>
            <properties>
                <maven.datanucleus.datastore>mysql</maven.datanucleus.datastore>
            </properties>
        </profile>

        <profile>
            <!-- Use datastore "mariadb" -->
            <id>mariadb</id>
            <dependencies>
                <dependency>
                    <groupId>org.mariadb.jdbc</groupId>
                    <artifactId>mariadb-java-client</artifactId>
                    <version>2.6.1</version>
                </dependency>
                <dependency>
                    <groupId>org.datanucleus</groupId>
                    <artifactId>datanucleus-rdbms</artifactId>
                    <version>[${rdbms.min.version}, ${rdbms.max.version})</version>
                </dependency>
            </dependencies>
            <properties>
                <maven.datanucleus.datastore>mariadb</maven.datanucleus.datastore>
            </properties>
        </profile>

        <profile>
            <!-- Use datastore "postgresql" -->
            <id>postgresql</id>
            <dependencies>
                <dependency>
                    <groupId>org.postgresql</groupId>
                    <artifactId>postgresql</artifactId>
                    <version>9.4.1211</version>
                </dependency>
                <dependency>
                    <groupId>org.datanucleus</groupId>
                    <artifactId>datanucleus-rdbms</artifactId>
                    <version>[${rdbms.min.version}, ${rdbms.max.version})</version>
                </dependency>
            </dependencies>
            <properties>
                <maven.datanucleus.datastore>postgresql</maven.datanucleus.datastore>
            </properties>
        </profile>

        <profile>
            <!-- Use datastore "derby" -->
            <id>derby</id>
            <dependencies>
                <dependency>
                    <groupId>org.apache.derby</groupId>
                    <artifactId>derby</artifactId>
                    <version>10.12.1.1</version>
                </dependency>
                <dependency>
                    <groupId>org.datanucleus</groupId>
                    <artifactId>datanucleus-rdbms</artifactId>
                    <version>[${rdbms.min.version}, ${rdbms.max.version})</version>
                </dependency>
            </dependencies>
            <properties>
                <maven.datanucleus.datastore>derby</maven.datanucleus.datastore>
            </properties>
        </profile>

        <profile>
            <!-- Use datastore "nuodb" -->
            <id>nuodb</id>
            <dependencies>
                <dependency>
                    <groupId>com.nuodb.jdbc</groupId>
                    <artifactId>nuodb-jdbc</artifactId>
                    <version>2.0.2</version>
                </dependency>
                <dependency>
                    <groupId>org.datanucleus</groupId>
                    <artifactId>datanucleus-rdbms</artifactId>
                    <version>[${rdbms.min.version}, ${rdbms.max.version})</version>
                </dependency>
            </dependencies>
            <properties>
                <maven.datanucleus.datastore>nuodb</maven.datanucleus.datastore>
            </properties>
        </profile>

        <profile>
            <!-- 
                Use datastore "sqlite". Should be invoked in combination with profile "rdbms" 
                (can't see a way of one profile activating another automatically)
            -->
            <id>sqlite</id>
            <dependencies>
                <dependency>
                    <groupId>org.xerial</groupId>
                    <artifactId>sqlite-jdbc</artifactId>
                    <version>3.14.2.1</version>
                </dependency>
                <dependency>
                    <groupId>org.datanucleus</groupId>
                    <artifactId>datanucleus-rdbms</artifactId>
                    <version>[${rdbms.min.version}, ${rdbms.max.version})</version>
                </dependency>
            </dependencies>
            <properties>
                <maven.datanucleus.datastore>sqlite</maven.datanucleus.datastore>
            </properties>
        </profile>

        <profile>
            <!-- 
                Use datastore "oracle". Should be invoked in combination with profile "rdbms" 
                (can't see a way of one profile activating another automatically)
            -->
            <id>oracle</id>
            <dependencies>
                <dependency>
                    <groupId>com.oracle.database.jdbc</groupId>
                    <artifactId>ojdbc6</artifactId>
                    <version>11.2.0.4</version>
                    <optional>true</optional>
                </dependency>
                <dependency>
                    <groupId>org.datanucleus</groupId>
                    <artifactId>datanucleus-rdbms</artifactId>
                    <version>[${rdbms.min.version}, ${rdbms.max.version})</version>
                </dependency>
            </dependencies>
            <properties>
                <maven.datanucleus.datastore>oracle</maven.datanucleus.datastore>
            </properties>
        </profile>

        <profile>
            <id>excel</id>
            <modules>
                <module>../jdo/spreadsheet/</module>
            </modules>
            <dependencies>
                <dependency>
                    <groupId>org.datanucleus</groupId>
                    <artifactId>datanucleus-excel</artifactId>
                    <version>[${excel.min.version}, ${excel.max.version})</version>
                </dependency>
                <dependency>
                    <groupId>org.apache.poi</groupId>
                    <artifactId>poi</artifactId>
                    <version>4.0.0</version>
                </dependency>
            </dependencies>
            <properties>
                <maven.datanucleus.datastore>excel</maven.datanucleus.datastore>
            </properties>
        </profile>

        <profile>
            <id>xls</id>
            <modules>
                <module>../jdo/spreadsheet/</module>
            </modules>
            <dependencies>
                <dependency>
                    <groupId>org.datanucleus</groupId>
                    <artifactId>datanucleus-excel</artifactId>
                    <version>[${excel.min.version}, ${excel.max.version})</version>
                </dependency>
                <dependency>
                    <groupId>org.apache.poi</groupId>
                    <artifactId>poi</artifactId>
                    <version>4.0.0</version>
                </dependency>
            </dependencies>
            <properties>
                <maven.datanucleus.datastore>xls</maven.datanucleus.datastore>
            </properties>
        </profile>

        <profile>
            <id>ooxml</id>
            <modules>
                <module>../jdo/spreadsheet/</module>
            </modules>
            <dependencies>
                <dependency>
                    <groupId>org.datanucleus</groupId>
                    <artifactId>datanucleus-excel</artifactId>
                    <version>[${excel.min.version}, ${excel.max.version})</version>
                </dependency>
                <dependency>
                    <groupId>org.apache.poi</groupId>
                    <artifactId>poi</artifactId>
                    <version>4.0.0</version>
                </dependency>
                <dependency>
                    <groupId>org.apache.poi</groupId>
                    <artifactId>poi-ooxml</artifactId>
                    <version>4.0.0</version>
                </dependency>
            </dependencies>
            <properties>
                <maven.datanucleus.datastore>ooxml</maven.datanucleus.datastore>
            </properties>
        </profile>

        <profile>
            <id>odf</id>
            <modules>
                <module>../jdo/spreadsheet/</module>
            </modules>
            <dependencies>
                <dependency>
                    <groupId>org.datanucleus</groupId>
                    <artifactId>datanucleus-odf</artifactId>
                    <version>[${odf.min.version}, ${odf.max.version})</version>
                </dependency>
                <dependency>
                    <groupId>org.odftoolkit</groupId>
                    <artifactId>odfdom-java</artifactId>
                    <version>0.8.7</version>
                </dependency>
            </dependencies>
            <properties>
                <maven.datanucleus.datastore>odf</maven.datanucleus.datastore>
            </properties>
        </profile>

        <profile>
            <id>hbase</id>
            <modules>
                <module>../jdo/hbase/</module>
            </modules>
            <dependencies>
                <dependency>
                    <groupId>org.datanucleus</groupId>
                    <artifactId>datanucleus-hbase</artifactId>
                    <version>[${hbase.min.version}, ${hbase.max.version})</version>
                    <scope>provided</scope>
                </dependency>
                <dependency>
                    <groupId>org.apache.hbase</groupId>
                    <artifactId>hbase-client</artifactId>
                    <version>1.1.2</version>
                </dependency>
            </dependencies>
            <properties>
                <maven.datanucleus.datastore>hbase</maven.datanucleus.datastore>
            </properties>
        </profile>

        <profile>
            <id>neo4j</id>
            <modules>
                <module>../jdo/neo4j/</module>
            </modules>
            <dependencies>
                <dependency>
                    <groupId>org.datanucleus</groupId>
                    <artifactId>datanucleus-neo4j</artifactId>
                    <version>[${neo4j.min.version}, ${neo4j.max.version})</version>
                    <scope>provided</scope>
                </dependency>
                <dependency>
                    <groupId>org.neo4j</groupId>
                    <artifactId>neo4j</artifactId>
                    <version>3.0.0</version>
                </dependency>
            </dependencies>
            <properties>
                <maven.datanucleus.datastore>neo4j</maven.datanucleus.datastore>
                <!-- If enabled, tests fail because clean up is keeping the database 
                    open. Schema removal is also currently not supported. -->
                <maven.datanucleus.test.skip.reset>true</maven.datanucleus.test.skip.reset>
            </properties>
        </profile>

        <profile>
            <id>mongodb</id>
            <modules>
                <module>../jdo/mongodb/</module>
            </modules>
            <dependencies>
                <dependency>
                    <groupId>org.datanucleus</groupId>
                    <artifactId>datanucleus-mongodb</artifactId>
                    <version>[${mongodb.min.version}, ${mongodb.max.version})</version>
                    <scope>provided</scope>
                </dependency>
                <dependency>
                    <groupId>org.mongodb</groupId>
                    <artifactId>mongo-java-driver</artifactId>
                    <version>3.8.0</version>
                </dependency>
            </dependencies>
            <properties>
                <maven.datanucleus.datastore>mongodb</maven.datanucleus.datastore>
            </properties>
        </profile>

        <profile>
            <id>cassandra</id>
            <modules>
                <module>../jdo/cassandra/</module>
            </modules>
            <dependencies>
                <dependency>
                    <groupId>org.datanucleus</groupId>
                    <artifactId>datanucleus-cassandra</artifactId>
                    <version>[${cassandra.min.version}, ${cassandra.max.version})</version>
                    <scope>provided</scope>
                </dependency>
                <dependency>
                    <groupId>com.datastax.cassandra</groupId>
                    <artifactId>cassandra-driver-core</artifactId>
                    <version>3.0.2</version>
                </dependency>
            </dependencies>
            <properties>
                <maven.datanucleus.datastore>cassandra</maven.datanucleus.datastore>
            </properties>
        </profile>

        <profile>
            <id>json</id>
            <modules>
                <module>../jdo/json/</module>
            </modules>
            <dependencies>
                <dependency>
                    <groupId>org.datanucleus</groupId>
                    <artifactId>datanucleus-json</artifactId>
                    <version>[${json.min.version}, ${json.max.version})</version>
                </dependency>
                <dependency>
                    <groupId>javax.ws.rs</groupId>
                    <artifactId>jsr311-api</artifactId>
                    <version>1.1</version>
                </dependency>
                <dependency>
                    <groupId>com.sun.jersey</groupId>
                    <artifactId>jersey-core</artifactId>
                    <version>1.0.3</version>
                </dependency>
                <dependency>
                    <groupId>com.sun.jersey</groupId>
                    <artifactId>jersey-server</artifactId>
                    <version>1.0.3</version>
                </dependency>
                <dependency>
                    <groupId>org.mortbay.jetty</groupId>
                    <artifactId>jetty</artifactId>
                    <version>6.1.21</version>
                </dependency>
                <dependency>
                    <groupId>org.mortbay.jetty</groupId>
                    <artifactId>jetty-util</artifactId>
                    <version>6.1.21</version>
                </dependency>
                <dependency>
                    <groupId>javax.servlet</groupId>
                    <artifactId>servlet-api</artifactId>
                    <version>2.5</version>
                </dependency>
            </dependencies>
            <properties>
                <maven.datanucleus.datastore>json</maven.datanucleus.datastore>
            </properties>
        </profile>

        <profile>
            <id>amazons3</id>
            <modules>
                <module>../jdo/json/</module>
            </modules>
            <properties>
                <maven.datanucleus.datastore>amazons3</maven.datanucleus.datastore>
            </properties>
        </profile>
        
        <profile>
            <id>googlestorage</id>
            <modules>
                <module>../jdo/json/</module>
            </modules>
            <properties>
                <maven.datanucleus.datastore>googlestorage</maven.datanucleus.datastore>
            </properties>
        </profile>        

        <profile>
            <id>xml</id>
            <modules>
                <module>../jdo/xml/</module>
            </modules>
            <dependencies>
                <dependency>
                    <groupId>org.datanucleus</groupId>
                    <artifactId>datanucleus-xml</artifactId>
                    <version>[${xml.min.version}, ${xml.max.version})</version>
                </dependency>
                <dependency>
                    <groupId>javax.xml.bind</groupId>
                    <artifactId>jaxb-api</artifactId>
                    <version>2.2.11</version>
                </dependency>
                <dependency>
                    <groupId>com.sun.xml.bind</groupId>
                    <artifactId>jaxb-impl</artifactId>
                    <version>2.2.7</version>
                </dependency>
                <dependency>
                    <groupId>javax.activation</groupId>
                    <artifactId>activation</artifactId>
                    <version>1.1.1</version>
                </dependency>
            </dependencies>
            <properties>
                <maven.datanucleus.datastore>xml</maven.datanucleus.datastore>
            </properties>
        </profile>

        <profile>
            <id>ldap</id>
            <modules>
                <module>../jdo/ldap/</module>
            </modules>
            <dependencies>
                <dependency>
                    <groupId>org.datanucleus</groupId>
                    <artifactId>datanucleus-ldap</artifactId>
                    <version>[${ldap.min.version}, ${ldap.max.version})</version>
                </dependency>
            </dependencies>
            <properties>
                <maven.datanucleus.datastore>ldap</maven.datanucleus.datastore>
            </properties>
        </profile>
        
    </profiles>
</project>
