//--------------------
//Security Policy File
//--------------------	

grant codebase "file:..${/}LibRepository${/}jotm${/}jars${/}*" {
	permission java.security.AllPermission;
};
grant codeBase "file:..${/}LibRepository${/}log4j${/}jars${/}*" {
	permission java.security.AllPermission;
};
grant codeBase "file:..${/}LibRepository${/}org.apache.bcel${/}jars${/}bcel-5.2.jar" {
	permission java.security.AllPermission;
};
	
//--------------------
//derby DB
//--------------------	
		
grant codeBase "file:D:${/}lib${/}*" {
	permission java.security.AllPermission;
	permission java.io.FilePermission "${user.dir}${/}derby.log", "read,write";
	permission java.io.FilePermission "${user.dir}${/}test${/}-", "read,write,delete";
};
grant { 
//--------------------
//runtime permissions
//--------------------
	//jdo
	permission javax.jdo.spi.JDOPermission "getMetadata";
	permission javax.jdo.spi.JDOPermission "setStateManager";

	//jdo API needs datetime (timezone class needs the following)
	permission java.util.PropertyPermission "user.country", "read";
	permission java.util.PropertyPermission "user.timezone", "read,write";
	permission java.util.PropertyPermission "java.home", "read";
	
	//DataNucleus needs to get classloader of classes
	permission java.lang.RuntimePermission "getClassLoader";
	
	//DataNucleus needs to detect the java and os version
	permission java.util.PropertyPermission "java.version", "read";
	permission java.util.PropertyPermission "os.name", "read";

	//DataNucleus reads these system properties
	permission java.util.PropertyPermission "org.datanucleus.*", "read";	
	permission java.util.PropertyPermission "javax.jdo.*", "read";	
	
	//DataNucleus runtime enhancement (needs read access to all jars/classes in classpath, so use <<ALL FILES>> to facilitate config)
	permission java.lang.RuntimePermission "createClassLoader";
	permission java.io.FilePermission "<<ALL FILES>>", "read";
	
	//DataNucleus needs to read manifest files (read permission to location of MANIFEST.MF files) 
	permission java.io.FilePermission "${user.dir}${/}-", "read";
	permission java.io.FilePermission "<<ALL FILES>>", "read";
	
	//DataNucleus uses reflection!!!
	permission java.lang.reflect.ReflectPermission "suppressAccessChecks";
	permission java.lang.RuntimePermission "accessDeclaredMembers";

//--------------------
//BCEL
//--------------------
	permission java.util.PropertyPermission "java.class.path", "read";
	permission java.util.PropertyPermission "sun.boot.class.path", "read";	
	permission java.util.PropertyPermission "java.ext.dirs", "read";	
	permission java.util.PropertyPermission "path.separator", "read";
	permission java.util.PropertyPermission "file.separator", "read";	
	permission java.util.PropertyPermission "JavaClass.debug", "read";	
	
//--------------------
//Sun ClassLoader
//--------------------
	permission java.lang.RuntimePermission "accessClassInPackage.sun.reflect";    
//--------------------
//Sun XML SAX parser
//--------------------
	permission java.util.PropertyPermission "org.xml.sax.driver", "read";
	
//--------------------
//Sun XML DOM parser
//--------------------	
	permission java.util.PropertyPermission "entityExpansionLimit", "read";
	permission java.util.PropertyPermission "maxOccurLimit", "read";
	permission java.util.PropertyPermission "elementAttributeLimit", "read";

//--------------------
//Commons Logging
//--------------------
	permission java.util.PropertyPermission "org.apache.commons.*", "read";	

//--------------------
//DataNucleus log4j is configured with access to:
//--------------------
	permission java.util.PropertyPermission "line.separator", "read";
	permission java.io.FilePermission "${user.dir}${/}jpox.log", "read,write";

//--------------------
//JTA test framework permissions
//--------------------
	permission java.util.PropertyPermission "org.shiftone.ooc.config", "read";
	permission java.util.PropertyPermission "org.apache.commons.logging.LogFactory.HashtableImpl", "read";
	permission java.util.PropertyPermission "javax.rmi.CORBA.PortableRemoteObjectClass", "read,write";
	permission java.util.PropertyPermission "java.naming.factory.url.pkgs", "read,write";
	permission java.util.PropertyPermission "rmi.local.call", "read,write";
	permission java.lang.RuntimePermission "accessClassInPackage.sun.rmi.server";
    permission java.lang.RuntimePermission "accessClassInPackage.sun.rmi.transport";
    permission java.net.SocketPermission "*", "listen,resolve";

	
//--------------------
//log4j
//--------------------	
	permission java.util.PropertyPermission "log4j.configuration", "read";
	permission java.util.PropertyPermission "log4j.defaultInitOverride", "read";
	permission java.util.PropertyPermission "log4j.configuratorClass", "read";	
	permission java.util.PropertyPermission "log4j.ignoreTCL", "read";	
	permission java.util.PropertyPermission "log4j.debug", "read";	
	permission java.util.PropertyPermission "log4j.configDebug", "read";
					
//--------------------
//test framework permissions
//--------------------
	permission java.util.PropertyPermission "org.datanucleus.test.properties.1", "read";
	permission java.util.PropertyPermission "org.datanucleus.test.properties.classpath.1", "read";
	permission java.util.PropertyPermission "user.home", "read";
	permission java.io.FilePermission "${user.home}${/}.jdo${/}PMFProperties.properties", "read";
	
//--------------------
//debugging purposes permissions
//--------------------
	permission java.net.SocketPermission "*", "connect,resolve";
	
//--------------------
//jotm carol
//--------------------	
	permission java.util.PropertyPermission "*", "read,write";	
};


