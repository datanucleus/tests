# A properties file to determine whether a test directory contains tests
# which must be rebuilt and run against the RI.
#
# An entry key is a test directory relative to the testsutie root (i.e.,
# ${TS_HOME}/src) with unix file separator (forward slash). An entry value
# is "true".
#
# For examples, some invalid entries:
# rebuildable./files/ts/src/com/sun/ts/tests/samples/jdbc = true
# rebuildable.com\sun\ts\tests\samples\jdbc = true
# rebuildable.com\\sun\\ts\\tests\\samples\\jdbc = true
# rebuildable.samples/jdbc = true
#
# Entry order is insignificant.  As a good practice, make the entry key
# (test directory) specific.  For example,
# rebuildable.com/sun/ts/tests = true
# conveys to the harness that all tests under com/sun/ts/tests are rebuildable
# tests.
#
# This file may be modified for debugging purpose only.  When testing for
# compatibility certification, the original version of this file must be
# used.  Do NOT make modifications without maintaining a backup copy.
#

rebuildable.com/sun/ts/tests/jaxws= true
rebuildable.com/sun/ts/tests/jws= true

# If any test (sub-)directories that have been covered by entries above
# are not service test directories, list them in exclude.dir.  It should
# arise rarely, and one possible senario could be:
# com/sun/ts/tests/foo is listed above as servicve tests, but later a
# non-service test dir com/sun/ts/tests/foo/non_service_tests is added,
# and you do not want to list a large number of subdirectories of foo
# in this properties file.
# If you get into this situation often, start questioning the test design
# The syntax: exclude.dir = com/sun/ts/tests/foo/non_service_test com/sun/
# ts/tests/bar/non_service_test com/sun/ts/tests/buz/non_service_test
#

exclude.dir = 
